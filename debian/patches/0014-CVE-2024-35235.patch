From: Thorsten Alteholz <debian@alteholz.de>
Date: Sun, 16 Jun 2024 00:06:47 +0200
Subject: CVE-2024-35235

---
 cups/http-addr.c | 35 ++++++++++++++++++++---------------
 scheduler/conf.c | 20 ++++++++++++++++++++
 2 files changed, 40 insertions(+), 15 deletions(-)

diff --git a/cups/http-addr.c b/cups/http-addr.c
index 6aeeb80..99d5621 100644
--- a/cups/http-addr.c
+++ b/cups/http-addr.c
@@ -1,6 +1,7 @@
 /*
  * HTTP address routines for CUPS.
  *
+ * Copyright © 2023-2024 by OpenPrinting
  * Copyright © 2007-2021 by Apple Inc.
  * Copyright © 1997-2006 by Easy Software Products, all rights reserved.
  *
@@ -206,27 +207,31 @@ httpAddrListen(http_addr_t *addr,	/* I - Address to bind to */
     * Remove any existing domain socket file...
     */
 
-    unlink(addr->un.sun_path);
+    if ((status = unlink(addr->un.sun_path)) < 0)
+    {
+      DEBUG_printf(("1httpAddrListen: Unable to unlink \"%s\": %s", addr->un.sun_path, strerror(errno)));
 
-   /*
-    * Save the current umask and set it to 0 so that all users can access
-    * the domain socket...
-    */
+      if (errno == ENOENT)
+       status = 0;
+    }
 
-    mask = umask(0);
 
-   /*
-    * Bind the domain socket...
-    */
+    if (!status)
+    {
+      // Save the current umask and set it to 0 so that all users can access
+      // the domain socket...
+      mask = umask(0);
 
-    status = bind(fd, (struct sockaddr *)addr, (socklen_t)httpAddrLength(addr));
 
-   /*
-    * Restore the umask and fix permissions...
-    */
+      // Bind the domain socket...
+      if ((status = bind(fd, (struct sockaddr *)addr, (socklen_t)httpAddrLength(addr))) < 0)
+      {
+       DEBUG_printf(("1httpAddrListen: Unable to bind domain socket \"%s\": %s", addr->un.sun_path, strerror(errno)));
+      }
 
-    umask(mask);
-    chmod(addr->un.sun_path, 0140777);
+      // Restore the umask...
+      umask(mask);
+    }
   }
   else
 #endif /* AF_LOCAL */
diff --git a/scheduler/conf.c b/scheduler/conf.c
index c74745c..a0f582a 100644
--- a/scheduler/conf.c
+++ b/scheduler/conf.c
@@ -3085,6 +3085,26 @@ read_cupsd_conf(cups_file_t *fp)	/* I - File to read from */
       cupsd_listener_t	*lis;		/* New listeners array */
 
 
+     /*
+      * If we are launched on-demand, do not use domain sockets from the config
+      * file.  Also check that the domain socket path is not too long...
+      */
+
+#ifdef HAVE_ONDEMAND
+      if (*value == '/' && OnDemand)
+      {
+        if (strcmp(value, CUPS_DEFAULT_DOMAINSOCKET))
+          cupsdLogMessage(CUPSD_LOG_INFO, "Ignoring %s address %s at line %d - only using domain socket from launchd/systemd.", line, value, linenum);
+        continue;
+      }
+#endif // HAVE_ONDEMAND
+
+      if (*value == '/' && strlen(value) > (sizeof(addr->addr.un.sun_path) - 1))
+      {
+        cupsdLogMessage(CUPSD_LOG_INFO, "Ignoring %s address %s at line %d - too long.", line, value, linenum);
+        continue;
+      }
+
      /*
       * Get the address list...
       */
