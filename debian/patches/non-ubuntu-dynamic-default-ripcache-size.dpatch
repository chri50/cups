#! /bin/sh -e
## non-ubuntu-dynamic-default-ripcache-size.dpatch by Martin Pitt <martin.pitt@ubuntu.com>
##
## DP: Set a dynamic default RIPCache to a quarter of available memory. The
## DP: upstream hardcoded default of 8 MB is too small for complex documents.
## DP: Currently, we apply this patch only on non-Ubuntu systems as there
## DP: Ghostscript only supports externally set buffer sizes, it would
## DP: default to 8 MB also if we supply an invalid RIP_MAX_CACHE like "auto"
## DP: as we do with the patch ubuntu-default-ripcache-size-auto.dpatch in
## DP: Ubuntu. Therefore Debian needs an externally set high but not too
## DP: high RIP_MAX_CACHE. We can switch to "auto" also there as soon as
## DP: Debian merges the patches from Ubuntu into their Ghostscript package
## DP: or updates to Ghostscript 9.00 or newer.

[ "`lsb_release -is 2>/dev/null`" != "Ubuntu" ] || { echo -n '(ignored)' >&2; exit 0; }
. /usr/share/dpatch/dpatch-run

@DPATCH@
diff -urNad cups-1.4.1~/scheduler/conf.c cups-1.4.1/scheduler/conf.c
--- cups-1.4.1~/scheduler/conf.c	2009-09-23 22:58:51.678030419 +0200
+++ cups-1.4.1/scheduler/conf.c	2009-09-23 22:59:03.426053168 +0200
@@ -410,6 +410,38 @@
   cupsArrayDelete(aliases);
 }
 
+/*
+ * 'cupsdDefaultRIPCacheSize()' - Get a suitable default RIPCache size.
+ */
+static const char*
+cupsdDefaultRIPCacheSize(void)
+{
+  static char size[50] = "8m";
+  char line[1000];
+  char *s;
+  cups_file_t	*fp;
+
+  if ((fp = cupsFileOpen("/proc/meminfo", "r")) != NULL)
+  {
+    cupsFileGetLine(fp, line, sizeof(line));
+    cupsFileClose(fp);
+    if (strncmp(line, "MemTotal:", 9) == 0)
+    {
+      /* search beginning of number */
+      for (s = line + 9; *s == ' '; ++s);
+      if (s)
+      {
+	/* we found memory size; default RIPCache can use a quarter of it */
+        snprintf(size, sizeof(size), "%lik", atol(s) / 4);
+      }
+    }
+  }
+
+
+  cupsdLogMessage(CUPSD_LOG_INFO, "cupsdDefaultRIPCacheSize: %s", size);
+  return size;
+}
+
 
 /*
  * 'cupsdReadConfiguration()' - Read the cupsd.conf file.
@@ -546,7 +578,7 @@
 
   cupsdClearString(&DefaultPaperSize);
 
-  cupsdSetString(&RIPCache, "8m");
+  cupsdSetString(&RIPCache, cupsdDefaultRIPCacheSize());
 
   cupsdSetString(&TempDir, NULL);
 
diff -urNad cups-1.4.1~/scheduler/cupsfilter.c cups-1.4.1/scheduler/cupsfilter.c
--- cups-1.4.1~/scheduler/cupsfilter.c	2009-06-05 23:38:52.000000000 +0200
+++ cups-1.4.1/scheduler/cupsfilter.c	2009-09-23 22:58:57.158032299 +0200
@@ -1193,6 +1193,34 @@
   return (0);
 }
 
+/*
+ * 'cupsdDefaultRIPCacheSize()' - Get a suitable default RIPCache size.
+ */
+static const char*
+cupsdDefaultRIPCacheSize(void)
+{
+  static char size[50] = "8m";
+  char line[1000];
+  char *s;
+  cups_file_t	*fp;
+
+  if ((fp = cupsFileOpen("/proc/meminfo", "r")) != NULL)
+  {
+    cupsFileGetLine(fp, line, sizeof(line));
+    cupsFileClose(fp);
+    if (strncmp(line, "MemTotal:", 9) == 0)
+    {
+      /* search beginning of number */
+      for (s = line + 9; *s == ' '; ++s);
+      if (s)
+      {
+	/* we found memory size; default RIPCache can use a quarter of it */
+        snprintf(size, sizeof(size), "%lik", atol(s) / 4);
+      }
+    }
+  }
+  return size;
+}
 
 /*
  * 'read_cupsd_conf()' - Read the cupsd.conf file to get the filter settings.
@@ -1218,7 +1246,7 @@
   else
     set_string(&FontPath, CUPS_FONTPATH);
 
-  set_string(&RIPCache, "8m");
+  set_string(&RIPCache, cupsdDefaultRIPCacheSize());
 
   if ((temp = getenv("CUPS_SERVERBIN")) != NULL)
     set_string(&ServerBin, temp);
