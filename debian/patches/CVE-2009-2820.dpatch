#! /bin/sh /usr/share/dpatch/dpatch-run
## CVE-2009-2820.dpatch by Marc Deslauriers <marc.deslauriers@ubuntu.com>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Description: fix XSS and CRLF injection in headers
## DP: Patch: thanks to Aaron Sigel

@DPATCH@
diff -urNad cups-1.4.1~/cgi-bin/admin.c cups-1.4.1/cgi-bin/admin.c
--- cups-1.4.1~/cgi-bin/admin.c	2009-08-29 02:05:14.000000000 -0400
+++ cups-1.4.1/cgi-bin/admin.c	2009-10-30 14:02:17.000000000 -0400
@@ -122,6 +122,7 @@
   */
 
   cgiSetVariable("SECTION", "admin");
+  cgiSetVariable("REFRESH_PAGE", "");
 
  /*
   * See if we have form data...
@@ -191,7 +192,7 @@
   }
   else if (op && !strcmp(op, "redirect"))
   {
-    const char *url;			/* Redirection URL... */
+    const char	*url;			/* Redirection URL... */
     char	prefix[1024];		/* URL prefix */
 
 
@@ -205,7 +206,50 @@
     fprintf(stderr, "DEBUG: redirecting with prefix %s!\n", prefix);
 
     if ((url = cgiGetVariable("URL")) != NULL)
-      printf("Location: %s%s\n\n", prefix, url);
+    {
+      char	encoded[1024],		/* Encoded URL string */
+      		*ptr;			/* Pointer into encoded string */
+
+
+      ptr = encoded;
+      if (*url != '/')
+        *ptr++ = '/';
+
+      for (; *url && ptr < (encoded + sizeof(encoded) - 4); url ++)
+      {
+        if (strchr("%@&+ <>#=", *url) || *url < ' ' || *url & 128)
+	{
+	 /*
+	  * Percent-encode this character; safe because we have at least 4
+	  * bytes left in the array...
+	  */
+
+	  sprintf(ptr, "%%%02X", *url & 255);
+	  ptr += 3;
+	}
+	else
+	  *ptr++ = *url;
+      }
+
+      *ptr = '\0';
+
+      if (*url)
+      {
+       /*
+        * URL was too long, just redirect to the admin page...
+	*/
+
+	printf("Location: %s/admin\n\n", prefix);
+      }
+      else
+      {
+       /*
+        * URL is OK, redirect there...
+	*/
+
+        printf("Location: %s%s\n\n", prefix, encoded);
+      }
+    }
     else
       printf("Location: %s/admin\n\n", prefix);
   }
@@ -345,6 +389,31 @@
     * and classes and (re)show the add page...
     */
 
+    if (cgiGetVariable("EVENT_JOB_CREATED"))
+      cgiSetVariable("EVENT_JOB_CREATED", "CHECKED");
+    if (cgiGetVariable("EVENT_JOB_COMPLETED"))
+      cgiSetVariable("EVENT_JOB_COMPLETED", "CHECKED");
+    if (cgiGetVariable("EVENT_JOB_STOPPED"))
+      cgiSetVariable("EVENT_JOB_STOPPED", "CHECKED");
+    if (cgiGetVariable("EVENT_JOB_CONFIG_CHANGED"))
+      cgiSetVariable("EVENT_JOB_CONFIG_CHANGED", "CHECKED");
+    if (cgiGetVariable("EVENT_PRINTER_STOPPED"))
+      cgiSetVariable("EVENT_PRINTER_STOPPED", "CHECKED");
+    if (cgiGetVariable("EVENT_PRINTER_ADDED"))
+      cgiSetVariable("EVENT_PRINTER_ADDED", "CHECKED");
+    if (cgiGetVariable("EVENT_PRINTER_MODIFIED"))
+      cgiSetVariable("EVENT_PRINTER_MODIFIED", "CHECKED");
+    if (cgiGetVariable("EVENT_PRINTER_DELETED"))
+      cgiSetVariable("EVENT_PRINTER_DELETED", "CHECKED");
+    if (cgiGetVariable("EVENT_SERVER_STARTED"))
+      cgiSetVariable("EVENT_SERVER_STARTED", "CHECKED");
+    if (cgiGetVariable("EVENT_SERVER_STOPPED"))
+      cgiSetVariable("EVENT_SERVER_STOPPED", "CHECKED");
+    if (cgiGetVariable("EVENT_SERVER_RESTARTED"))
+      cgiSetVariable("EVENT_SERVER_RESTARTED", "CHECKED");
+    if (cgiGetVariable("EVENT_SERVER_AUDIT"))
+      cgiSetVariable("EVENT_SERVER_AUDIT", "CHECKED");
+
     request  = ippNewRequest(CUPS_GET_PRINTERS);
     response = cupsDoRequest(http, request, "/");
 
@@ -467,6 +536,7 @@
   ipp_attribute_t *attr;		/* member-uris attribute */
   char		uri[HTTP_MAX_URI];	/* Device or printer URI */
   const char	*name,			/* Pointer to class name */
+		*op,			/* Operation name */
 		*ptr;			/* Pointer to CGI variable */
   const char	*title;			/* Title of page */
   static const char * const pattrs[] =	/* Requested printer attributes */
@@ -478,6 +548,7 @@
 
 
   title = cgiText(modify ? _("Modify Class") : _("Add Class"));
+  op    = cgiGetVariable("OP");
   name  = cgiGetVariable("PRINTER_NAME");
 
   if (cgiGetVariable("PRINTER_LOCATION") == NULL)
@@ -502,6 +573,12 @@
     * Do the request and get back a response...
     */
 
+    cgiClearVariables();
+    if (op)
+      cgiSetVariable("OP", op);
+    if (name)
+      cgiSetVariable("PRINTER_NAME", name);
+
     if ((response = cupsDoRequest(http, request, "/")) != NULL)
     {
      /*
@@ -2621,7 +2698,9 @@
   if ((val = cupsGetOption("DefaultAuthType", num_settings,
                            settings)) != NULL && !strcasecmp(val, "Negotiate"))
     cgiSetVariable("KERBEROS", "CHECKED");
+  else
 #endif /* HAVE_GSSAPI */
+  cgiSetVariable("KERBEROS", "");
 
 #ifdef HAVE_DNSSD
   cgiSetVariable("HAVE_DNSSD", "1");
diff -urNad cups-1.4.1~/cgi-bin/cgi.h cups-1.4.1/cgi-bin/cgi.h
--- cups-1.4.1~/cgi-bin/cgi.h	2009-01-13 19:44:55.000000000 -0500
+++ cups-1.4.1/cgi-bin/cgi.h	2009-10-30 13:59:32.000000000 -0400
@@ -54,6 +54,7 @@
 extern void		cgiAbort(const char *title, const char *stylesheet,
 			         const char *format, ...);
 extern int		cgiCheckVariables(const char *names);
+extern void		cgiClearVariables(void);
 extern void		*cgiCompileSearch(const char *query);
 extern void		cgiCopyTemplateFile(FILE *out, const char *tmpl);
 extern void		cgiCopyTemplateLang(const char *tmpl);
diff -urNad cups-1.4.1~/cgi-bin/classes.c cups-1.4.1/cgi-bin/classes.c
--- cups-1.4.1~/cgi-bin/classes.c	2008-11-17 11:46:23.000000000 -0500
+++ cups-1.4.1/cgi-bin/classes.c	2009-10-30 13:59:32.000000000 -0400
@@ -72,6 +72,7 @@
   */
 
   cgiSetVariable("SECTION", "classes");
+  cgiSetVariable("REFRESH_PAGE", "");
 
  /*
   * See if we are displaying a printer or all classes...
diff -urNad cups-1.4.1~/cgi-bin/help.c cups-1.4.1/cgi-bin/help.c
--- cups-1.4.1~/cgi-bin/help.c	2008-09-15 20:45:16.000000000 -0400
+++ cups-1.4.1/cgi-bin/help.c	2009-10-30 13:59:32.000000000 -0400
@@ -3,7 +3,7 @@
  *
  *   Online help CGI for the Common UNIX Printing System (CUPS).
  *
- *   Copyright 2007-2008 by Apple Inc.
+ *   Copyright 2007-2009 by Apple Inc.
  *   Copyright 1997-2006 by Easy Software Products.
  *
  *   These coded instructions, statements, and computer programs are the
@@ -63,6 +63,7 @@
   */
 
   cgiSetVariable("SECTION", "help");
+  cgiSetVariable("REFRESH_PAGE", "");
 
  /*
   * Load the help index...
@@ -102,7 +103,7 @@
   */
 
   for (i = 0; i < argc; i ++)
-    fprintf(stderr, "argv[%d]=\"%s\"\n", i, argv[i]);
+    fprintf(stderr, "DEBUG: argv[%d]=\"%s\"\n", i, argv[i]);
 
   if ((helpfile = getenv("PATH_INFO")) != NULL)
   {
@@ -182,6 +183,12 @@
   topic = cgiGetVariable("TOPIC");
   si    = helpSearchIndex(hi, query, topic, helpfile);
 
+  cgiClearVariables();
+  if (query)
+    cgiSetVariable("QUERY", query);
+  if (topic)
+    cgiSetVariable("TOPIC", topic);
+
   fprintf(stderr, "DEBUG: query=\"%s\", topic=\"%s\"\n",
           query ? query : "(null)", topic ? topic : "(null)");
 
diff -urNad cups-1.4.1~/cgi-bin/ipp-var.c cups-1.4.1/cgi-bin/ipp-var.c
--- cups-1.4.1~/cgi-bin/ipp-var.c	2009-08-28 18:54:34.000000000 -0400
+++ cups-1.4.1/cgi-bin/ipp-var.c	2009-10-30 13:59:32.000000000 -0400
@@ -1398,7 +1398,9 @@
   int			ascending,	/* Order of jobs (0 = descending) */
 			first,		/* First job to show */
 			count;		/* Number of jobs */
-  const char		*var;		/* Form variable */
+  const char		*var,		/* Form variable */
+			*query,		/* Query string */
+			*section;	/* Section in web interface */
   void			*search;	/* Search data */
   char			url[1024],	/* Printer URI */
 			val[1024];	/* Form variable */
@@ -1442,11 +1444,14 @@
     * Get a list of matching job objects.
     */
 
-    if ((var = cgiGetVariable("QUERY")) != NULL &&
+    if ((query = cgiGetVariable("QUERY")) != NULL &&
         !cgiGetVariable("CLEAR"))
-      search = cgiCompileSearch(var);
+      search = cgiCompileSearch(query);
     else
+    {
+      query  = NULL;
       search = NULL;
+    }
 
     jobs  = cgiGetIPPObjects(response, search);
     count = cupsArrayCount(jobs);
@@ -1471,16 +1476,27 @@
     if (first < 0)
       first = 0;
 
-    sprintf(val, "%d", count);
-    cgiSetVariable("TOTAL", val);
-
     if ((var = cgiGetVariable("ORDER")) != NULL)
       ascending = !strcasecmp(var, "asc");
     else
-    {
       ascending = !which_jobs || !strcasecmp(which_jobs, "not-completed");
-      cgiSetVariable("ORDER", ascending ? "asc" : "dec");
-    }
+
+    section = cgiGetVariable("SECTION");
+
+    cgiClearVariables();
+
+    if (query)
+      cgiSetVariable("QUERY", query);
+
+    cgiSetVariable("ORDER", ascending ? "asc" : "dec");
+
+    cgiSetVariable("SECTION", section);
+
+    sprintf(val, "%d", count);
+    cgiSetVariable("TOTAL", val);
+
+    if (which_jobs)
+      cgiSetVariable("WHICH_JOBS", which_jobs);
 
     if (ascending)
     {
@@ -1502,7 +1518,7 @@
     */
 
     if (dest)
-      snprintf(val, sizeof(val), "/%s/%s",  cgiGetVariable("SECTION"), dest);
+      snprintf(val, sizeof(val), "/%s/%s", section, dest);
     else
       strlcpy(val, "/jobs/", sizeof(val));
 
diff -urNad cups-1.4.1~/cgi-bin/jobs.c cups-1.4.1/cgi-bin/jobs.c
--- cups-1.4.1~/cgi-bin/jobs.c	2008-01-21 20:38:39.000000000 -0500
+++ cups-1.4.1/cgi-bin/jobs.c	2009-10-30 13:59:32.000000000 -0400
@@ -57,6 +57,7 @@
   */
 
   cgiSetVariable("SECTION", "jobs");
+  cgiSetVariable("REFRESH_PAGE", "");
 
  /*
   * Connect to the HTTP server...
diff -urNad cups-1.4.1~/cgi-bin/libcupscgi.exp cups-1.4.1/cgi-bin/libcupscgi.exp
--- cups-1.4.1~/cgi-bin/libcupscgi.exp	2009-01-13 19:44:55.000000000 -0500
+++ cups-1.4.1/cgi-bin/libcupscgi.exp	2009-10-30 13:59:32.000000000 -0400
@@ -1,4 +1,5 @@
 _cgiCheckVariables
+_cgiClearVariables
 _cgiCompileSearch
 _cgiCopyTemplateFile
 _cgiCopyTemplateLang
diff -urNad cups-1.4.1~/cgi-bin/printers.c cups-1.4.1/cgi-bin/printers.c
--- cups-1.4.1~/cgi-bin/printers.c	2008-11-17 11:46:23.000000000 -0500
+++ cups-1.4.1/cgi-bin/printers.c	2009-10-30 13:59:32.000000000 -0400
@@ -73,6 +73,7 @@
   */
 
   cgiSetVariable("SECTION", "printers");
+  cgiSetVariable("REFRESH_PAGE", "");
 
  /*
   * See if we are displaying a printer or all printers...
diff -urNad cups-1.4.1~/cgi-bin/template.c cups-1.4.1/cgi-bin/template.c
--- cups-1.4.1~/cgi-bin/template.c	2008-01-14 17:00:02.000000000 -0500
+++ cups-1.4.1/cgi-bin/template.c	2009-10-30 13:59:32.000000000 -0400
@@ -675,6 +675,8 @@
       fputs("&gt;", out);
     else if (*s == '\"')
       fputs("&quot;", out);
+    else if (*s == '\'')
+      fputs("&#39;", out);
     else if (*s == '&')
       fputs("&amp;", out);
     else
@@ -695,7 +697,7 @@
 {
   while (*s)
   {
-    if (strchr("%&+ <>#=", *s) || *s & 128)
+    if (strchr("%@&+ <>#=", *s) || *s < ' ' || *s & 128)
       fprintf(out, "%%%02X", *s & 255);
     else
       putc(*s, out);
diff -urNad cups-1.4.1~/cgi-bin/var.c cups-1.4.1/cgi-bin/var.c
--- cups-1.4.1~/cgi-bin/var.c	2009-05-08 00:53:19.000000000 -0400
+++ cups-1.4.1/cgi-bin/var.c	2009-10-30 13:59:32.000000000 -0400
@@ -15,6 +15,7 @@
  * Contents:
  *
  *   cgiCheckVariables()        - Check for the presence of "required" variables.
+ *   cgiClearVariables()        - Clear all form variables.
  *   cgiGetArray()              - Get an element from a form array...
  *   cgiGetFile()               - Get the file (if any) that was submitted in the form.
  *   cgiGetSize()               - Get the size of a form array value.
@@ -135,6 +136,31 @@
 
 
 /*
+ * 'cgiClearVariables()' - Clear all form variables.
+ */
+
+void
+cgiClearVariables(void)
+{
+  int		i, j;			/* Looping vars */
+  _cgi_var_t	*v;			/* Current variable */
+
+
+  for (v = form_vars, i = form_count; i > 0; v ++, i --)
+  {
+    _cupsStrFree(v->name);
+    for (j = 0; j < v->nvalues; j ++)
+      if (v->values[j])
+        _cupsStrFree(v->values[j]);
+  }
+
+  form_count = 0;
+
+  cgi_unlink_file();
+}
+
+
+/*
  * 'cgiGetArray()' - Get an element from a form array...
  */
 
@@ -151,7 +177,7 @@
   if (element < 0 || element >= var->nvalues)
     return (NULL);
 
-  return (var->values[element]);
+  return (_cupsStrRetain(var->values[element]));
 }
 
 
@@ -206,7 +232,7 @@
 		  var->values[var->nvalues - 1]));
 #endif /* DEBUG */
 
-  return ((var == NULL) ? NULL : var->values[var->nvalues - 1]);
+  return ((var == NULL) ? NULL : _cupsStrRetain(var->values[var->nvalues - 1]));
 }
 
 
@@ -337,9 +363,9 @@
       var->nvalues = element + 1;
     }
     else if (var->values[element])
-      free((char *)var->values[element]);
+      _cupsStrFree((char *)var->values[element]);
 
-    var->values[element] = strdup(value);
+    var->values[element] = _cupsStrAlloc(value);
   }
 }
 
@@ -384,7 +410,7 @@
   {
     for (i = size; i < var->nvalues; i ++)
       if (var->values[i])
-        free((void *)(var->values[i]));
+        _cupsStrFree((void *)(var->values[i]));
   }
 
   var->nvalues = size;
@@ -417,9 +443,9 @@
   {
     for (i = 0; i < var->nvalues; i ++)
       if (var->values[i])
-        free((char *)var->values[i]);
+        _cupsStrFree((char *)var->values[i]);
 
-    var->values[0] = strdup(value);
+    var->values[0] = _cupsStrAlloc(value);
     var->nvalues   = 1;
   }
 }
@@ -465,10 +491,10 @@
   if ((var->values = calloc(element + 1, sizeof(char *))) == NULL)
     return;
 
-  var->name            = strdup(name);
+  var->name            = _cupsStrAlloc(name);
   var->nvalues         = element + 1;
   var->avalues         = element + 1;
-  var->values[element] = strdup(value);
+  var->values[element] = _cupsStrAlloc(value);
 
   form_count ++;
 }
